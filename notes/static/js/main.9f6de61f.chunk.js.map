{"version":3,"sources":["assets/logo.svg","store/factory.js","store/index.js","route/index.js","serviceWorker.js","index.js","components/Layout/index.jsx","components/Layout/UserLayout.jsx","components/BlackBlock/index.jsx","components/ShareModal/index.jsx","components/Editor/Toolsbar.jsx","components/Editor/index.jsx"],"names":["module","exports","factory","$name","initState","state","type","data","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunkMiddleware","enhancer","applyMiddleware","stores","userInfo","systemInfo","cache","openid","rootReducer","combineReducers","configStore","createStore","Index","lazy","User","Detail","Edit","RoutesIndex","fallback","indicator","LoadingOutlined","style","fontSize","spin","exact","path","component","Component","Boolean","location","hostname","match","ReactDOM","render","locale","zhCN","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","menu","className","mode","Item","key","LogoutOutlined","BaseLayout","this","props","history","pathname","push","src","require","alt","placement","title","PlusCircleOutlined","color","onClick","e","navergateTo","count","backgroundColor","overlayClassName","content","size","icon","UserOutlined","children","withRouter","UserLayout","handleSelect","item","setState","width","selectedKeys","onSelect","FileAddOutlined","ReadOutlined","SettingOutlined","Search","Input","onCancel","url","visible","onCopy","success","footer","maskClosable","value","onSearch","copy","enterButton","isMarkActive","editor","format","marks","Editor","toggleMark","removeMark","addMark","ToolbarIcon","classnames","ToolsbarButton","tips","disabled","active","mouseEnterDelay","map","i","j","Toolsbar","onContextMenu","event","preventDefault","which","returnValue","undos","length","onMouseDown","undo","redos","redo","AimOutlined","Leaf","attributes","leaf","bold","code","italic","underline","strikethrough","text","withHistory","withReact","createEditor","onChange","log","spellCheck","renderLeaf"],"mappings":"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","file":"static/js/main.9f6de61f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function factory($name, initState) {\n  return (state = initState, { type, data }) => {\n    if (type === $name) {\n      state = data ? { ...state, ...data } : null;\n    }\n    return state;\n  };\n}\n\nexport default factory;\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport factory from './factory';\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst middlewares = [thunkMiddleware];\n\nif (process.env.NODE_ENV === 'development' && process.env.TARO_ENV !== 'quickapp') {\n  // middlewares.push(require('redux-logger').createLogger())\n}\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(...middlewares)\n  // other store enhancers if any\n);\n\nconst stores = {\n  // 用户\n  userInfo: factory('userInfo', null),\n  // 系统信息\n  systemInfo: factory('systemInfo', {}),\n  // 数据缓存\n  cache: factory('cache', { openid: '' })\n};\n\nconst rootReducer = combineReducers(stores);\n\nexport function configStore() {\n  const store = createStore(rootReducer, enhancer);\n  return store;\n}\nexport default configStore();\n","import React, { Component, Suspense, lazy } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n// import { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Spin } from 'antd';\nimport { BaseLayout, BlackBlock } from 'components';\n\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst Index = lazy(() => import('../page/Index'));\nconst User = lazy(() => import('../page/User'));\nconst Detail = lazy(() => import('../page/Detail'));\nconst Edit = lazy(() => import('../page/Edit'));\n// const Login = lazy(() => import('../page/Login'));\n\nclass RoutesIndex extends Component {\n  render() {\n    return (\n      <Router>\n        <BaseLayout>\n          <Suspense\n            fallback={\n              <Spin indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                <BlackBlock />\n              </Spin>\n            }>\n            <Switch>\n              <Route exact path=\"/index\" component={Index} />\n              <Route path=\"/user\" component={User} />\n              <Route exact path=\"/notes/:id\" component={Detail} />\n              <Route exact path=\"/notes/:id/edit\" component={Edit} />\n            </Switch>\n          </Suspense>\n        </BaseLayout>\n      </Router>\n    );\n  }\n}\n\nexport default RoutesIndex;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ConfigProvider } from 'antd';\nimport { Provider } from 'react-redux';\nimport zhCN from 'antd/es/locale/zh_CN';\nimport store from 'store';\nimport Routes from './route';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.less';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <ConfigProvider locale={zhCN}>\n    <Provider store={store}>\n      <Routes />\n    </Provider>\n  </ConfigProvider>,\n  // </React.StrictMode>\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Avatar, Popover, Menu, Badge, Tooltip } from 'antd';\nimport { UserOutlined, LogoutOutlined, PlusCircleOutlined } from '@ant-design/icons';\nimport './index.less';\n\nconst menu = (\n  <div className=\"userinfo-menu\">\n    <Menu mode=\"vertical\">\n      <Menu.Item key=\"3\">\n        <LogoutOutlined />\n        退出\n      </Menu.Item>\n    </Menu>\n  </div>\n);\n\nclass BaseLayout extends Component {\n  componentDidMount() {\n    const { location, history } = this.props;\n    if (location.pathname === '/') {\n      history.push('/user');\n    }\n  }\n  navergateTo(path) {\n    const { history } = this.props;\n    history.push(path);\n  }\n  render() {\n    const { location } = this.props;\n    return location.pathname !== '/notes/test/edit' ? (\n      <div className=\"layout\">\n        <div className=\"layout-header\">\n          <div className=\"layout-container\">\n            <div className=\"layout-header-content\">\n              <div className=\"logo\">\n                <img src={require('assets/logo.svg')} alt=\"logo\" />\n              </div>\n              <div className=\"operate\">\n                <Tooltip placement=\"left\" title=\"新增创作\">\n                  <div className=\"operate-item\">\n                    <PlusCircleOutlined style={{ fontSize: 24, color: '#79a8a9' }} />\n                  </div>\n                </Tooltip>\n                <div className=\"operate-item\" onClick={e => this.navergateTo('/user')}>\n                  <Badge count={5} style={{ backgroundColor: '#79a8a9' }}>\n                    <span>创作</span>\n                  </Badge>\n                </div>\n                <div className=\"operate-item\" onClick={e => this.navergateTo('/user/study')}>\n                  <Badge count={5} style={{ backgroundColor: '#79a8a9' }}>\n                    <span>学习</span>\n                  </Badge>\n                </div>\n                <Popover overlayClassName=\"layout-popover-menu\" title=\"虚竹\" content={menu} placement=\"bottomRight\">\n                  <div className=\"operate-item\">\n                    <Avatar size={24} icon={<UserOutlined />} />\n                  </div>\n                </Popover>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"layout-content\">\n          <div className=\"layout-container\">{this.props.children}</div>\n        </div>\n      </div>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\nexport default withRouter(BaseLayout);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Menu } from 'antd';\nimport { FileAddOutlined, ReadOutlined, SettingOutlined } from '@ant-design/icons';\n\nimport './UserLayout.less';\n\nclass UserLayout extends Component {\n  constructor(props) {\n    super();\n    const { location } = props;\n    this.state = {\n      key: location.pathname\n    };\n  }\n  state = {\n    key: 'user'\n  };\n  componentDidMount() {}\n  handleSelect = item => {\n    const { history } = this.props;\n    this.setState({\n      key: item.key\n    });\n    history.push(item.key);\n  };\n  render() {\n    const { key } = this.state;\n    return (\n      <div className=\"user\">\n        <div className=\"user-nav\">\n          <Menu style={{ width: 200 }} selectedKeys={[key]} mode=\"inline\" onSelect={this.handleSelect}>\n            <Menu.Item key=\"/user\">\n              <FileAddOutlined />\n              我的创作\n            </Menu.Item>\n            <Menu.Item key=\"/user/study\">\n              <ReadOutlined />\n              我的学习\n            </Menu.Item>\n            <Menu.Item key=\"/user/setting\">\n              <SettingOutlined />\n              账号设置\n            </Menu.Item>\n          </Menu>\n        </div>\n        <div className=\"user-content\">{this.props.children}</div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(UserLayout);\n","import React, { Component } from 'react';\n\nimport './index.less';\n\nclass Index extends Component {\n  render() {\n    return <div className=\"black-block\"></div>;\n  }\n}\nexport default Index;\n","import React, { Component } from 'react';\nimport { Modal, Switch, Input, message } from 'antd';\nimport copy from 'copy-to-clipboard';\n\nimport './index.less';\n\nconst { Search } = Input;\nclass Index extends Component {\n  onCancel = () => {\n    const { onCancel } = this.props;\n    typeof onCancel === 'function' && onCancel();\n  };\n  render() {\n    const {\n      url,\n      visible,\n      onCopy = () => {\n        message.success('复制成功');\n        const { onCancel } = this.props;\n        typeof onCancel === 'function' && onCancel();\n      }\n    } = this.props;\n    return (\n      <Modal title=\"分享创作\" footer={null} maskClosable={false} visible={visible} onCancel={this.onCancel}>\n        <div className=\"share-content\">\n          <div className=\"share-desc\">\n            <div className=\"name\">公开分享（未开启）</div>\n            <div className=\"desc\">开启后获得链接的人可以访问</div>\n          </div>\n          <Switch />\n        </div>\n        <Search value={url} onSearch={value => copy(value, { onCopy })} enterButton=\"复制链接\" />\n      </Modal>\n    );\n  }\n}\n\nexport default Index;\n","import React from 'react';\nimport { Tooltip } from 'antd';\nimport classnames from 'classnames';\nimport { Editor, Transforms } from 'slate';\nimport { AimOutlined } from '@ant-design/icons';\n\nimport './index.less';\n\nconst LIST_TYPES = ['oList', 'uList'];\n\nconst isBlockActive = (editor, format) => {\n  const [match] = Editor.nodes(editor, {\n    match: n => n.type === format\n  });\n\n  return !!match;\n};\n\nconst isMarkActive = (editor, format) => {\n  const marks = Editor.marks(editor);\n  return marks ? marks[format] === true : false;\n};\nconst toggleBlock = (editor, format) => {\n  const isActive = isBlockActive(editor, format);\n  const isList = LIST_TYPES.includes(format);\n\n  Transforms.unwrapNodes(editor, {\n    match: n => LIST_TYPES.includes(n.type),\n    split: true\n  });\n\n  Transforms.setNodes(editor, {\n    type: isActive ? 'paragraph' : isList ? 'list-item' : format\n  });\n\n  if (!isActive && isList) {\n    const block = { type: format, children: [] };\n    Transforms.wrapNodes(editor, block);\n  }\n};\n\nconst toggleMark = (editor, format) => {\n  const isActive = isMarkActive(editor, format);\n\n  if (isActive) {\n    Editor.removeMark(editor, format);\n  } else {\n    Editor.addMark(editor, format, true);\n  }\n};\n\nexport const ToolbarIcon = ({ icon }) => {\n  return <span className={classnames('bai-icon', `bai-icon-${icon}`)} />;\n};\n\nexport const ToolsbarButton = ({ tips = [], format, icon, disabled = false, active = false, ...props }) => {\n  return (\n    <Tooltip\n      placement=\"bottom\"\n      mouseEnterDelay={0.03}\n      title={\n        tips && (\n          <div className=\"bai-toolbar-tips\">\n            {tips.map((i, j) => (\n              <div key={j}>{i}</div>\n            ))}\n          </div>\n        )\n      }>\n      <button className={classnames('bai-button', { 'bai-button-disabled': disabled }, { 'bai-button-active': active })} {...props}>\n        {format ? <ToolbarIcon icon={format} /> : icon}\n      </button>\n    </Tooltip>\n  );\n};\n\nconst Toolsbar = ({ editor }) => {\n  const { history } = editor;\n  const handleMenu = event => {\n    event = event || window.event;\n    event.preventDefault();\n    if (event.which === 2) event.returnValue = false;\n    return false;\n  };\n\n  return (\n    <div className=\"bai-toolbar\" onContextMenu={handleMenu}>\n      <div className=\"bai-toolbar-content\">\n        <div className=\"bai-toolbar-area\">\n          <ToolsbarButton\n            disabled={!(history.undos && history.undos.length > 0)}\n            format=\"undo\"\n            tips={['撤销', '⌘+Z']}\n            onMouseDown={e => {\n              e.preventDefault();\n              editor.undo();\n            }}></ToolsbarButton>\n          <ToolsbarButton\n            disabled={!(history.redos && history.redos.length > 0)}\n            format=\"redo\"\n            tips={['重做', '⌘+Shift+Z']}\n            onMouseDown={e => {\n              e.preventDefault();\n              editor.redo();\n            }}></ToolsbarButton>\n        </div>\n        <div className=\"bai-toolbar-area\">\n          <ToolsbarButton\n            active={isMarkActive(editor, 'bold')}\n            format=\"bold\"\n            tips={['加粗', '⌘+B']}\n            onMouseDown={e => {\n              e.preventDefault();\n              toggleMark(editor, 'bold');\n            }}></ToolsbarButton>\n          <ToolsbarButton\n            format=\"italic\"\n            tips={['斜体', '⌘+I']}\n            onMouseDown={e => {\n              e.preventDefault();\n              toggleMark(editor, 'italic');\n            }}></ToolsbarButton>\n          <ToolsbarButton\n            format=\"strikethrough\"\n            tips={['删除线', '⌘+Shift+X']}\n            onMouseDown={e => {\n              e.preventDefault();\n              toggleMark(editor, 'strikethrough');\n            }}></ToolsbarButton>\n          <ToolsbarButton\n            format=\"underline\"\n            tips={['下划线', '⌘+U']}\n            onMouseDown={e => {\n              e.preventDefault();\n              toggleMark(editor, 'underline');\n            }}></ToolsbarButton>\n        </div>\n        <div className=\"bai-toolbar-area\">\n          <ToolsbarButton format=\"uList\" tips={['无序列表', '⌘+Shift+8']}></ToolsbarButton>\n          <ToolsbarButton format=\"oList\" tips={['有序列表', '⌘+Shift+7']}></ToolsbarButton>\n          <ToolsbarButton format=\"tList\" tips={['任务列表', '⌘+Option+T']}></ToolsbarButton>\n        </div>\n        <div className=\"bai-toolbar-area\">\n          <ToolsbarButton format=\"link\" tips={['插入链接', '⌘+K']}></ToolsbarButton>\n          <ToolsbarButton format=\"quote\" tips={['插入引用']}></ToolsbarButton>\n          <ToolsbarButton format=\"hr\" tips={['插入分割线']}></ToolsbarButton>\n        </div>\n        <div className=\"bai-toolbar-area\">\n          <ToolsbarButton icon={<AimOutlined />} tips={['添加题？']}></ToolsbarButton>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Toolsbar;\n","import React, { Component } from 'react';\nimport { Slate, Editable, withReact } from 'slate-react';\nimport { createEditor } from 'slate';\nimport { withHistory } from 'slate-history';\nimport Toolsbar from './Toolsbar';\n\nimport './index.less';\n\nconst Leaf = ({ attributes, children, leaf }) => {\n  if (leaf.bold) {\n    children = <strong>{children}</strong>;\n  }\n\n  if (leaf.code) {\n    children = <code>{children}</code>;\n  }\n\n  if (leaf.italic) {\n    children = <em>{children}</em>;\n  }\n\n  if (leaf.underline) {\n    children = <u>{children}</u>;\n  }\n\n  if (leaf.strikethrough) {\n    children = <del>{children}</del>;\n  }\n\n  return <span {...attributes}>{children}</span>;\n};\n\nclass Index extends Component {\n  state = {\n    // 构建初始状态…\n    value: [\n      {\n        type: 'paragraph',\n        children: [{ text: 'A line of text in a paragraph.' }]\n      }\n    ],\n    editor: withHistory(withReact(createEditor()))\n  };\n  componentDidMount() {}\n  onChange = value => {\n    console.log('value: ', value);\n    this.setState({ value });\n  };\n  render() {\n    const { editor, value } = this.state;\n    return (\n      <div className=\"bai-editor\">\n        <div className=\"bai-wrap\">\n          <Slate editor={editor} value={value} onChange={this.onChange}>\n            <Toolsbar editor={editor} />\n            <Editable className=\"bai-content-editor\" spellCheck renderLeaf={props => <Leaf {...props} />}></Editable>\n          </Slate>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Index;\n"],"sourceRoot":""}